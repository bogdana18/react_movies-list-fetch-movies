{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","emptyMovie","useState","query","setQuery","isLoading","setIsLoading","isFound","setIsFound","isTouched","setIsTouched","activeMovie","setActiveMovie","findMovie","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","e","currentTarget","disabled","onClick","preventDefault","classNames","App","setMovies","find","stateMovie","newMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b31cb1a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A'\n            ? movie.imgUrl\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview'}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const emptyMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFound, setIsFound] = useState(false);\n  const [isTouched, setIsTouched] = useState(false);\n  const [activeMovie, setActiveMovie] = useState<Movie>(emptyMovie);\n\n  const findMovie = () => {\n    setIsLoading(true);\n\n    let movie: Movie = emptyMovie;\n\n    getMovie(query)\n      .then((response) => {\n        if (response.Response === 'False') {\n          setIsFound(false);\n          setIsLoading(false);\n          setIsTouched(true);\n          setActiveMovie(emptyMovie);\n\n          return;\n        }\n\n        setIsLoading(false);\n        setIsFound(true);\n        setIsTouched(true);\n\n        movie = {\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster\n            || 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        };\n\n        setActiveMovie(movie);\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.currentTarget.value);\n              }}\n            />\n          </div>\n\n          {!isFound && isTouched\n          && (\n\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={query === ''}\n              onClick={(e) => {\n                e.preventDefault();\n                findMovie();\n              }}\n              className={\n                classNames(\n                  'button',\n                  'is-light',\n                  { 'is-loading': isLoading },\n                )\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {isFound\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => {\n                    addMovie(activeMovie);\n                    setQuery('');\n                    setActiveMovie(emptyMovie);\n                    setIsFound(false);\n                    setIsTouched(false);\n                  }}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n\n        </div>\n      </form>\n\n      {isFound && activeMovie !== emptyMovie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={activeMovie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2e2876ea';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const sameMovie = movies\n      .find(stateMovie => stateMovie.imdbId === movie.imdbId);\n\n    if (!sameMovie) {\n      const newMovies = [...movies, movie];\n\n      setMovies(newMovies);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie  addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}